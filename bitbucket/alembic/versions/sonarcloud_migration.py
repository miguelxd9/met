"""Add SonarCloud tables

Revision ID: sonarcloud_001
Revises: cac955137649
Create Date: 2024-01-01 00:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mssql

# revision identifiers, used by Alembic.
revision = 'sonarcloud_001'
down_revision = 'cac955137649'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Crear tabla organizations
    op.create_table('organizations',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('key', sa.String(length=100), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('url', sa.String(length=500), nullable=True),
        sa.Column('sonarcloud_id', sa.String(length=100), nullable=True),
        sa.Column('avatar_url', sa.String(length=500), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('GETDATE()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('GETDATE()'), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('key'),
        sa.UniqueConstraint('sonarcloud_id')
    )
    
    # Crear tabla sonarcloud_projects
    op.create_table('sonarcloud_projects',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('key', sa.String(length=100), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('visibility', sa.String(length=50), nullable=True),
        sa.Column('sonarcloud_id', sa.String(length=100), nullable=True),
        sa.Column('qualifier', sa.String(length=50), nullable=True),
        sa.Column('scm_url', sa.String(length=500), nullable=True),
        sa.Column('scm_provider', sa.String(length=50), nullable=True),
        sa.Column('last_analysis_date', sa.DateTime(), nullable=True),
        sa.Column('revision', sa.String(length=100), nullable=True),
        sa.Column('organization_id', sa.Integer(), nullable=False),
        sa.Column('bitbucket_repository_id', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('GETDATE()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('GETDATE()'), nullable=False),
        sa.ForeignKeyConstraint(['organization_id'], ['organizations.id'], ondelete='NO ACTION'),
        sa.ForeignKeyConstraint(['bitbucket_repository_id'], ['repositories.id'], ondelete='NO ACTION'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('key'),
        sa.UniqueConstraint('sonarcloud_id')
    )
    
    # Crear tabla issues
    op.create_table('issues',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('sonarcloud_id', sa.String(length=100), nullable=False),
        sa.Column('key', sa.String(length=100), nullable=False),
        sa.Column('rule', sa.String(length=100), nullable=False),
        sa.Column('severity', sa.Enum('BLOCKER', 'CRITICAL', 'MAJOR', 'MINOR', 'INFO', name='issueseverity'), nullable=False),
        sa.Column('type', sa.Enum('BUG', 'VULNERABILITY', 'CODE_SMELL', name='issuetype'), nullable=False),
        sa.Column('status', sa.Enum('OPEN', 'CONFIRMED', 'REOPENED', 'RESOLVED', 'CLOSED', name='issuestatus'), nullable=False),
        sa.Column('component', sa.String(length=500), nullable=True),
        sa.Column('line', sa.Integer(), nullable=True),
        sa.Column('start_line', sa.Integer(), nullable=True),
        sa.Column('end_line', sa.Integer(), nullable=True),
        sa.Column('start_offset', sa.Integer(), nullable=True),
        sa.Column('end_offset', sa.Integer(), nullable=True),
        sa.Column('message', sa.Text(), nullable=False),
        sa.Column('effort', sa.String(length=50), nullable=True),
        sa.Column('debt', sa.String(length=50), nullable=True),
        sa.Column('creation_date', sa.DateTime(), nullable=True),
        sa.Column('update_date', sa.DateTime(), nullable=True),
        sa.Column('close_date', sa.DateTime(), nullable=True),
        sa.Column('author', sa.String(length=200), nullable=True),
        sa.Column('assignee', sa.String(length=200), nullable=True),
        sa.Column('sonarcloud_project_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('GETDATE()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('GETDATE()'), nullable=False),
        sa.ForeignKeyConstraint(['sonarcloud_project_id'], ['sonarcloud_projects.id'], ondelete='NO ACTION'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('key'),
        sa.UniqueConstraint('sonarcloud_id')
    )
    
    # Crear tabla security_hotspots
    op.create_table('security_hotspots',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('sonarcloud_id', sa.String(length=100), nullable=False),
        sa.Column('key', sa.String(length=100), nullable=False),
        sa.Column('rule', sa.String(length=100), nullable=False),
        sa.Column('status', sa.Enum('TO_REVIEW', 'IN_REVIEW', 'REVIEWED', name='securityhotspotstatus'), nullable=False),
        sa.Column('resolution', sa.Enum('SAFE', 'ACKNOWLEDGED', 'FIXED', name='securityhotspotresolution'), nullable=True),
        sa.Column('component', sa.String(length=500), nullable=True),
        sa.Column('line', sa.Integer(), nullable=True),
        sa.Column('start_line', sa.Integer(), nullable=True),
        sa.Column('end_line', sa.Integer(), nullable=True),
        sa.Column('start_offset', sa.Integer(), nullable=True),
        sa.Column('end_offset', sa.Integer(), nullable=True),
        sa.Column('message', sa.Text(), nullable=False),
        sa.Column('effort', sa.String(length=50), nullable=True),
        sa.Column('debt', sa.String(length=50), nullable=True),
        sa.Column('creation_date', sa.DateTime(), nullable=True),
        sa.Column('update_date', sa.DateTime(), nullable=True),
        sa.Column('author', sa.String(length=200), nullable=True),
        sa.Column('assignee', sa.String(length=200), nullable=True),
        sa.Column('sonarcloud_project_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('GETDATE()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('GETDATE()'), nullable=False),
        sa.ForeignKeyConstraint(['sonarcloud_project_id'], ['sonarcloud_projects.id'], ondelete='NO ACTION'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('key'),
        sa.UniqueConstraint('sonarcloud_id')
    )
    
    # Crear tabla quality_gates
    op.create_table('quality_gates',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('sonarcloud_id', sa.String(length=100), nullable=False),
        sa.Column('key', sa.String(length=100), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('status', sa.Enum('OK', 'WARN', 'ERROR', name='qualitygatestatus'), nullable=False),
        sa.Column('conditions_count', sa.Integer(), nullable=True),
        sa.Column('ignored_conditions_count', sa.Integer(), nullable=True),
        sa.Column('analysis_date', sa.DateTime(), nullable=True),
        sa.Column('sonarcloud_project_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('GETDATE()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('GETDATE()'), nullable=False),
        sa.ForeignKeyConstraint(['sonarcloud_project_id'], ['sonarcloud_projects.id'], ondelete='NO ACTION'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('key'),
        sa.UniqueConstraint('sonarcloud_id')
    )
    
    # Crear tabla metrics
    op.create_table('metrics',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('key', sa.String(length=100), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('value', sa.Float(), nullable=True),
        sa.Column('formatted_value', sa.String(length=100), nullable=True),
        sa.Column('type', sa.String(length=50), nullable=True),
        sa.Column('domain', sa.String(length=50), nullable=True),
        sa.Column('analysis_date', sa.DateTime(), nullable=True),
        sa.Column('sonarcloud_project_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('GETDATE()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('GETDATE()'), nullable=False),
        sa.ForeignKeyConstraint(['sonarcloud_project_id'], ['sonarcloud_projects.id'], ondelete='NO ACTION'),
        sa.PrimaryKeyConstraint('id')
    )
    
    # Crear Ã­ndices para mejorar el rendimiento
    op.create_index('ix_organizations_key', 'organizations', ['key'])
    op.create_index('ix_sonarcloud_projects_key', 'sonarcloud_projects', ['key'])
    op.create_index('ix_sonarcloud_projects_organization_id', 'sonarcloud_projects', ['organization_id'])
    op.create_index('ix_sonarcloud_projects_scm_url', 'sonarcloud_projects', ['scm_url'])
    op.create_index('ix_issues_key', 'issues', ['key'])
    op.create_index('ix_issues_sonarcloud_project_id', 'issues', ['sonarcloud_project_id'])
    op.create_index('ix_issues_severity', 'issues', ['severity'])
    op.create_index('ix_issues_status', 'issues', ['status'])
    op.create_index('ix_security_hotspots_key', 'security_hotspots', ['key'])
    op.create_index('ix_security_hotspots_sonarcloud_project_id', 'security_hotspots', ['sonarcloud_project_id'])
    op.create_index('ix_quality_gates_sonarcloud_project_id', 'quality_gates', ['sonarcloud_project_id'])
    op.create_index('ix_metrics_sonarcloud_project_id', 'metrics', ['sonarcloud_project_id'])
    op.create_index('ix_metrics_key', 'metrics', ['key'])
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Eliminar Ã­ndices
    op.drop_index('ix_metrics_key', 'metrics')
    op.drop_index('ix_metrics_sonarcloud_project_id', 'metrics')
    op.drop_index('ix_quality_gates_sonarcloud_project_id', 'quality_gates')
    op.drop_index('ix_security_hotspots_sonarcloud_project_id', 'security_hotspots')
    op.drop_index('ix_security_hotspots_key', 'security_hotspots')
    op.drop_index('ix_issues_status', 'issues')
    op.drop_index('ix_issues_severity', 'issues')
    op.drop_index('ix_issues_sonarcloud_project_id', 'issues')
    op.drop_index('ix_issues_key', 'issues')
    op.drop_index('ix_sonarcloud_projects_scm_url', 'sonarcloud_projects')
    op.drop_index('ix_sonarcloud_projects_organization_id', 'sonarcloud_projects')
    op.drop_index('ix_sonarcloud_projects_key', 'sonarcloud_projects')
    op.drop_index('ix_organizations_key', 'organizations')
    
    # Eliminar tablas en orden inverso (por las foreign keys)
    op.drop_table('metrics')
    op.drop_table('quality_gates')
    op.drop_table('security_hotspots')
    op.drop_table('issues')
    op.drop_table('sonarcloud_projects')
    op.drop_table('organizations')
    
    # ### end Alembic commands ###
