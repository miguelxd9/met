"""Initial migration with psycopg3 compatibility

Revision ID: 001
Revises: 
Create Date: 2024-01-01 00:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '001'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Crear tabla workspaces
    op.create_table('workspaces',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('uuid', sa.String(length=36), nullable=False),
        sa.Column('slug', sa.String(length=100), nullable=False),
        sa.Column('name', sa.String(length=200), nullable=False),
        sa.Column('is_private', sa.Boolean(), nullable=False, default=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('bitbucket_id', sa.String(length=100), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('uuid'),
        sa.UniqueConstraint('slug'),
        sa.UniqueConstraint('bitbucket_id')
    )
    
    # Crear tabla projects
    op.create_table('projects',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('uuid', sa.String(length=36), nullable=False),
        sa.Column('key', sa.String(length=20), nullable=False),
        sa.Column('name', sa.String(length=200), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('is_private', sa.Boolean(), nullable=False, default=False),
        sa.Column('bitbucket_id', sa.String(length=100), nullable=False),
        sa.Column('workspace_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('uuid'),
        sa.UniqueConstraint('key'),
        sa.UniqueConstraint('bitbucket_id')
    )
    
    # Crear tabla repositories
    op.create_table('repositories',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('uuid', sa.String(length=36), nullable=False),
        sa.Column('slug', sa.String(length=100), nullable=False),
        sa.Column('name', sa.String(length=200), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('is_private', sa.Boolean(), nullable=False, default=False),
        sa.Column('language', sa.String(length=50), nullable=True),
        sa.Column('size_bytes', sa.BigInteger(), nullable=True),
        sa.Column('last_activity_date', sa.DateTime(timezone=True), nullable=True),
        sa.Column('devops_compliance_score', sa.Float(), nullable=True),
        sa.Column('has_readme', sa.Boolean(), nullable=False, default=False),
        sa.Column('has_license', sa.Boolean(), nullable=False, default=False),
        sa.Column('has_ci_cd', sa.Boolean(), nullable=False, default=False),
        sa.Column('has_security_scanning', sa.Boolean(), nullable=False, default=False),
        sa.Column('has_dependency_management', sa.Boolean(), nullable=False, default=False),
        sa.Column('workspace_id', sa.Integer(), nullable=False),
        sa.Column('project_id', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='SET NULL'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('uuid'),
        sa.UniqueConstraint('slug'),
        sa.UniqueConstraint('bitbucket_id')
    )
    
    # Crear tabla commits
    op.create_table('commits',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('hash', sa.String(length=40), nullable=False),
        sa.Column('bitbucket_id', sa.String(length=100), nullable=False),
        sa.Column('message', sa.Text(), nullable=False),
        sa.Column('author_name', sa.String(length=200), nullable=True),
        sa.Column('author_email', sa.String(length=200), nullable=True),
        sa.Column('commit_date', sa.DateTime(timezone=True), nullable=False),
        sa.Column('additions', sa.Integer(), nullable=True),
        sa.Column('deletions', sa.Integer(), nullable=True),
        sa.Column('total_changes', sa.Integer(), nullable=True),
        sa.Column('is_merge_commit', sa.Boolean(), nullable=False, default=False),
        sa.Column('repository_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['repository_id'], ['repositories.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('hash'),
        sa.UniqueConstraint('bitbucket_id')
    )
    
    # Crear tabla pull_requests
    op.create_table('pull_requests',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('bitbucket_id', sa.String(length=100), nullable=False),
        sa.Column('title', sa.String(length=500), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('state', sa.String(length=20), nullable=False),
        sa.Column('created_date', sa.DateTime(timezone=True), nullable=False),
        sa.Column('updated_date', sa.DateTime(timezone=True), nullable=True),
        sa.Column('closed_date', sa.DateTime(timezone=True), nullable=True),
        sa.Column('merged_date', sa.DateTime(timezone=True), nullable=True),
        sa.Column('author_name', sa.String(length=200), nullable=True),
        sa.Column('author_email', sa.String(length=200), nullable=True),
        sa.Column('source_branch', sa.String(length=100), nullable=False),
        sa.Column('destination_branch', sa.String(length=100), nullable=False),
        sa.Column('additions', sa.Integer(), nullable=True),
        sa.Column('deletions', sa.Integer(), nullable=True),
        sa.Column('total_changes', sa.Integer(), nullable=True),
        sa.Column('repository_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.ForeignKeyConstraint(['repository_id'], ['repositories.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('bitbucket_id')
    )
    
    # Crear índices para mejorar el rendimiento
    op.create_index('ix_workspaces_slug', 'workspaces', ['slug'])
    op.create_index('ix_projects_key', 'projects', ['key'])
    op.create_index('ix_repositories_slug', 'repositories', ['slug'])
    op.create_index('ix_repositories_language', 'repositories', ['language'])
    op.create_index('ix_commits_hash', 'commits', ['hash'])
    op.create_index('ix_commits_commit_date', 'commits', ['commit_date'])
    op.create_index('ix_pull_requests_state', 'pull_requests', ['state'])
    op.create_index('ix_pull_requests_created_date', 'pull_requests', ['created_date'])
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Eliminar índices
    op.drop_index('ix_pull_requests_created_date', table_name='pull_requests')
    op.drop_index('ix_pull_requests_state', table_name='pull_requests')
    op.drop_index('ix_commits_commit_date', table_name='commits')
    op.drop_index('ix_commits_hash', table_name='commits')
    op.drop_index('ix_repositories_language', table_name='repositories')
    op.drop_index('ix_repositories_slug', table_name='repositories')
    op.drop_index('ix_projects_key', table_name='projects')
    op.drop_index('ix_workspaces_slug', table_name='workspaces')
    
    # Eliminar tablas en orden inverso (por las foreign keys)
    op.drop_table('pull_requests')
    op.drop_table('commits')
    op.drop_table('repositories')
    op.drop_table('projects')
    op.drop_table('workspaces')
    
    # ### end Alembic commands ###
