"""Initial migration for SQL Server Azure

Revision ID: cac955137649
Revises: 
Create Date: 2024-01-01 00:00:00.000000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import mssql

# revision identifiers, used by Alembic.
revision = 'cac955137649'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    
    # Crear tabla workspaces
    op.create_table('workspaces',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('uuid', sa.String(length=36), nullable=False),
        sa.Column('slug', sa.String(length=100), nullable=False),
        sa.Column('name', sa.String(length=200), nullable=False),
        sa.Column('is_private', sa.Boolean(), nullable=False, default=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('bitbucket_id', sa.String(length=100), nullable=False),
        sa.Column('website', sa.String(length=500), nullable=True),
        sa.Column('location', sa.String(length=255), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('GETDATE()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('GETDATE()'), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('uuid'),
        sa.UniqueConstraint('slug'),
        sa.UniqueConstraint('bitbucket_id')
    )
    
    # Crear tabla projects
    op.create_table('projects',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('uuid', sa.String(length=36), nullable=False),
        sa.Column('key', sa.String(length=20), nullable=False),
        sa.Column('name', sa.String(length=200), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('is_private', sa.Boolean(), nullable=False, default=False),
        sa.Column('bitbucket_id', sa.String(length=100), nullable=False),
        sa.Column('avatar_url', sa.String(length=500), nullable=True),
        sa.Column('workspace_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('GETDATE()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('GETDATE()'), nullable=False),
        sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ondelete='NO ACTION'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('uuid'),
        sa.UniqueConstraint('key'),
        sa.UniqueConstraint('bitbucket_id')
    )
    
    # Crear tabla repositories
    op.create_table('repositories',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('uuid', sa.String(length=50), nullable=False),
        sa.Column('slug', sa.String(length=100), nullable=False),
        sa.Column('name', sa.String(length=255), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('is_private', sa.Boolean(), default=True, nullable=False),
        sa.Column('language', sa.String(length=50), nullable=True),
        sa.Column('bitbucket_id', sa.String(length=100), nullable=True),
        sa.Column('avatar_url', sa.String(length=500), nullable=True),
        sa.Column('website', sa.String(length=500), nullable=True),
        sa.Column('size_bytes', sa.BigInteger(), default=0, nullable=False),
        sa.Column('workspace_id', sa.Integer(), nullable=False),
        sa.Column('project_id', sa.Integer(), nullable=True),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('GETDATE()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('GETDATE()'), nullable=False),
        sa.ForeignKeyConstraint(['workspace_id'], ['workspaces.id'], ondelete='NO ACTION'),
        sa.ForeignKeyConstraint(['project_id'], ['projects.id'], ondelete='NO ACTION'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('uuid'),
        sa.UniqueConstraint('slug'),
        sa.UniqueConstraint('bitbucket_id')
    )
    
    # Crear tabla commits
    op.create_table('commits',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('hash', sa.String(length=40), nullable=False),
        sa.Column('bitbucket_id', sa.String(length=100), nullable=False),
        sa.Column('message', sa.Text(), nullable=False),
        sa.Column('author_name', sa.String(length=200), nullable=True),
        sa.Column('author_email', sa.String(length=200), nullable=True),
        sa.Column('commit_date', sa.DateTime(timezone=True), nullable=False),
        sa.Column('author_date', sa.DateTime(timezone=True), nullable=False),
        sa.Column('is_merge_commit', sa.Boolean(), nullable=False, default=False),
        sa.Column('repository_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('GETDATE()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('GETDATE()'), nullable=False),
        sa.ForeignKeyConstraint(['repository_id'], ['repositories.id'], ondelete='NO ACTION'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('hash'),
        sa.UniqueConstraint('bitbucket_id')
    )
    
    # Crear tabla pull_requests
    op.create_table('pull_requests',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('bitbucket_id', sa.String(length=100), nullable=False),
        sa.Column('title', sa.String(length=500), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('state', sa.String(length=20), nullable=False),
        sa.Column('author_name', sa.String(length=200), nullable=True),
        sa.Column('author_email', sa.String(length=200), nullable=True),
        sa.Column('source_branch', sa.String(length=100), nullable=False),
        sa.Column('target_branch', sa.String(length=100), nullable=False),
        sa.Column('created_date', sa.DateTime(timezone=True), nullable=False),
        sa.Column('updated_date', sa.DateTime(timezone=True), nullable=False),
        sa.Column('closed_date', sa.DateTime(timezone=True), nullable=True),
        sa.Column('merged_date', sa.DateTime(timezone=True), nullable=True),


        sa.Column('repository_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('GETDATE()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('GETDATE()'), nullable=False),
        sa.ForeignKeyConstraint(['repository_id'], ['repositories.id'], ondelete='NO ACTION'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('bitbucket_id')
    )
    
    # Crear tabla branches
    op.create_table('branches',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('type', sa.String(length=20), nullable=False),
        sa.Column('target_hash', sa.String(length=40), nullable=False),
        sa.Column('repository_id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(), server_default=sa.text('GETDATE()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(), server_default=sa.text('GETDATE()'), nullable=False),
        sa.ForeignKeyConstraint(['repository_id'], ['repositories.id'], ondelete='NO ACTION'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name', 'repository_id')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('branches')
    op.drop_table('pull_requests')
    op.drop_table('commits')
    op.drop_table('repositories')
    op.drop_table('projects')
    op.drop_table('workspaces')
    # ### end Alembic commands ###
